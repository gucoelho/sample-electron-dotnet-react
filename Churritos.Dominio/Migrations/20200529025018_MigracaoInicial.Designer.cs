// <auto-generated />
using System;
using Churritos.Dominio.Dados;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Churritos.Dominio.Migrations
{
    [DbContext(typeof(ContextoDaAplicação))]
    [Migration("20200529025018_MigracaoInicial")]
    partial class MigracaoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Churritos.Dominio.Modelos.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categoria");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Doces Tradicionais"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Doces Especiais"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Doces Gelados"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Salgados"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Salgados Especiais"
                        });
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.Cobertura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cobertura");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Coco"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Confete"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Granulado"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Granulado colorido"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Choco ball"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Amendoim moído"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Oreo"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Kit kat preto"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Kit kat branco"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Ouro branco"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Sonho de valsa"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Ovomantine"
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Ninho em pó"
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Morango"
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Banana"
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Cheddar"
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Catupiry"
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Cream cheese"
                        });
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.EntidadesAuxiliares.ProdutoCobertura", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CoberturaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProdutoId", "CoberturaId");

                    b.HasIndex("CoberturaId");

                    b.ToTable("ProdutoCobertura");
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.EntidadesAuxiliares.ProdutoRecheio", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecheioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProdutoId", "RecheioId");

                    b.HasIndex("RecheioId");

                    b.ToTable("ProdutoRecheio");
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriação")
                        .HasColumnName("DataCriacao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Nome = "Churros Doce Tradicional",
                            Valor = 8m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            Nome = "Churros Doce Especial",
                            Valor = 12m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            Nome = "Churros Doce Gelado",
                            Valor = 16m
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 4,
                            Nome = "Churros Salgado",
                            Valor = 10m
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 5,
                            Nome = "Churros Salgado Especial",
                            Valor = 12m
                        });
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.ProdutoPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CoberturaSelecionadaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecheioSelecionadoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CoberturaSelecionadaId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("RecheioSelecionadoId");

                    b.ToTable("ProdutoPedido");
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.Recheio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Recheio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Doce de leite"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Chocolate"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Goiabada"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Misto"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Nutella"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Ninho"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Nutella com ninho"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Frango"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Calabresa"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Carne moída"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Carne seca"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Pizza"
                        });
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.EntidadesAuxiliares.ProdutoCobertura", b =>
                {
                    b.HasOne("Churritos.Dominio.Modelos.Cobertura", "Cobertura")
                        .WithMany()
                        .HasForeignKey("CoberturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Churritos.Dominio.Modelos.Produto", "Produto")
                        .WithMany("ProdutoCoberturas")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.EntidadesAuxiliares.ProdutoRecheio", b =>
                {
                    b.HasOne("Churritos.Dominio.Modelos.Produto", "Produto")
                        .WithMany("ProdutoRecheios")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Churritos.Dominio.Modelos.Recheio", "Recheio")
                        .WithMany()
                        .HasForeignKey("RecheioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.Produto", b =>
                {
                    b.HasOne("Churritos.Dominio.Modelos.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Churritos.Dominio.Modelos.ProdutoPedido", b =>
                {
                    b.HasOne("Churritos.Dominio.Modelos.Cobertura", "CoberturaSelecionada")
                        .WithMany()
                        .HasForeignKey("CoberturaSelecionadaId");

                    b.HasOne("Churritos.Dominio.Modelos.Pedido", null)
                        .WithMany("_produtos")
                        .HasForeignKey("PedidoId");

                    b.HasOne("Churritos.Dominio.Modelos.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.HasOne("Churritos.Dominio.Modelos.Recheio", "RecheioSelecionado")
                        .WithMany()
                        .HasForeignKey("RecheioSelecionadoId");
                });
#pragma warning restore 612, 618
        }
    }
}
